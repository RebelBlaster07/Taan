mkdir crud-api
cd crud-api


npm init -y

npm install express mongoose body-parser cors


If local: run mongod in terminal


node server.js


Use Postman or browser:

POST http://localhost:3000/users

GET http://localhost:3000/users

PUT http://localhost:3000/users/:id

DELETE http://localhost:3000/users/:id



const express = require('express');
const mongoose = require('mongoose');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
app.use(cors());
app.use(bodyParser.json());

// MongoDB connection
mongoose.connect('mongodb://localhost:27017/cruddb', { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log("MongoDB connected"))
  .catch(err => console.log(err));

// Schema
const UserSchema = new mongoose.Schema({
  name: String,
  email: String
});
const User = mongoose.model('User', UserSchema);

// CREATE
app.post('/users', async (req, res) => {
  const user = new User(req.body);
  const saved = await user.save();
  res.send(saved);
});

// READ
app.get('/users', async (req, res) => {
  const users = await User.find();
  res.send(users);
});

// UPDATE
app.put('/users/:id', async (req, res) => {
  const updated = await User.findByIdAndUpdate(req.params.id, req.body, { new: true });
  res.send(updated);
});

// DELETE
app.delete('/users/:id', async (req, res) => {
  const deleted = await User.findByIdAndDelete(req.params.id);
  res.send(deleted);
});

// Start server
app.listen(3000, () => console.log('Server running on http://localhost:3000'));
